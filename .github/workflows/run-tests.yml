# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [lts/fermium]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Write VPN Files
        run: |
          echo "$CA_CRT" > .github/vpn/ca.crt
          echo "$USER_CRT" > .github/vpn/user.crt
          echo "$USER_KEY" > .github/vpn/user.key
          echo "$TLS_KEY" > .github/vpn/tls.key
        shell: bash
        env:
          CA_CRT: ${{ secrets.CA_CRT}}
          USER_CRT: ${{ secrets.USER_CRT }}
          USER_KEY: ${{ secrets.USER_KEY }}
          TLS_KEY: ${{ secrets.TLS_KEY }}

      - name: Install Open VPN
        run: |
          sudo apt install apt-transport-https
          sudo wget https://swupdate.openvpn.net/repos/openvpn-repo-pkg-key.pub
          sudo apt-key add openvpn-repo-pkg-key.pub
          sudo wget -O /etc/apt/sources.list.d/openvpn3.list https://swupdate.openvpn.net/community/openvpn3/repos/openvpn3-focal.list
          sudo apt update
          sudo apt install openvpn3=16~beta+focal

      - name: Start Open VPN 3
        run: openvpn3 session-start --config .github/vpn/config.ovpn

      - name: Install Doxygen
        run: sudo apt-get install doxygen

      - name: Check npm audit
        run: npm audit --production --audit-level=low

      - name: Install production dependencies (fail if any warning)
        run: sh ./npm-production-install.sh

      - name: Install dependencies
        run: npm ci

      - name: Check code style
        run: npm run lint

      - name: Build Project
        run: npm run build

      - name: Test Package Install
        run: npm version "5.0.0" --no-git-tag-version && npm pack && npm install -g ./sasjs-cli-5.0.0.tgz && sasjs v

      - name: Run smoke tests
        run: sh ./test.sh

      - name: Run mocked tests
        run: npm run test:mocked
        env:
          CI: true
          CLIENT: ${{secrets.CLIENT}}
          SECRET: ${{secrets.SECRET}}
          SAS_USERNAME: ${{secrets.SAS_USERNAME}}
          SAS_PASSWORD: ${{secrets.SAS_PASSWORD}}
          VIYA_SERVER_URL: ${{secrets.VIYA_SERVER_URL}}
          SAS9_SERVER_URL: ${{secrets.SAS9_SERVER_URL}}
          SASJS_SERVER_URL: ${{secrets.SASJS_SERVER_URL}}
          ACCESS_TOKEN: ${{secrets.ACCESS_TOKEN}}
          REFRESH_TOKEN: ${{secrets.REFRESH_TOKEN}}

      - name: Run server tests
        run: npm run test:server
        env:
          CI: true
          CLIENT: ${{secrets.CLIENT}}
          SECRET: ${{secrets.SECRET}}
          SAS_USERNAME: ${{secrets.SAS_USERNAME}}
          SAS_PASSWORD: ${{secrets.SAS_PASSWORD}}
          VIYA_SERVER_URL: ${{secrets.VIYA_SERVER_URL}}
          SAS9_SERVER_URL: ${{secrets.SAS9_SERVER_URL}}
          SASJS_SERVER_URL: ${{secrets.SASJS_SERVER_URL}}
          ACCESS_TOKEN: ${{secrets.ACCESS_TOKEN}}
          REFRESH_TOKEN: ${{secrets.REFRESH_TOKEN}}
